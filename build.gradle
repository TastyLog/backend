buildscript {
    ext {
        // queryDsl
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.18'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'

    // queryDsl
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"

}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_11 // Java 버전을 11로 설정
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

repositories {
    mavenCentral()
}

dependencies {
//    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // json
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

    // swagger
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.12'

    //fcm
    implementation 'com.google.firebase:firebase-admin:6.8.1'
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'


//    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.2.2'

//    // ⭐ Spring boot 3.x이상에서 QueryDsl 패키지를 정의하는 방법
//    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
//    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
//    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
//    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation 'org.jetbrains:annotations:24.0.0'
    implementation 'org.jetbrains:annotations:24.0.0'
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"



    //validation
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.7.13'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // hibernate
    implementation 'org.hibernate:hibernate-core:5.6.5.Final'


    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
//querydsl 추가 끝